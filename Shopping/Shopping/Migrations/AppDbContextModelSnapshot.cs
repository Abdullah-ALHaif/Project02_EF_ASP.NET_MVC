// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shopping.Data;

namespace Shopping.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Shopping.Models.CustomerModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Email = "aalhaif@hotmail.com",
                            Name = "Abdullah AL Haif"
                        },
                        new
                        {
                            ID = 2,
                            Email = "batool@gmail.com",
                            Name = "Batool Alghamdi"
                        },
                        new
                        {
                            ID = 3,
                            Email = "turki@yahoo.com",
                            Name = "Turki Alqurashi"
                        },
                        new
                        {
                            ID = 4,
                            Email = "ezz@gmail.com",
                            Name = "Abdulaziz Almohammadi"
                        },
                        new
                        {
                            ID = 5,
                            Email = "Thamer@yahoo.com",
                            Name = "Thamer Mashni"
                        },
                        new
                        {
                            ID = 6,
                            Email = "sara@hotmail.com",
                            Name = "Sara Alnasser"
                        },
                        new
                        {
                            ID = 7,
                            Email = "asarawiq@outlook.com",
                            Name = "Abdulrahman Sarawiq"
                        });
                });

            modelBuilder.Entity("Shopping.Models.CustomerProduct", b =>
                {
                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.HasKey("CustomerID", "ProductID");

                    b.HasIndex("ProductID");

                    b.ToTable("CustomerProducts");
                });

            modelBuilder.Entity("Shopping.Models.GiftModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<string>("GiftedProduct")
                        .HasColumnType("text");

                    b.Property<string>("Giver")
                        .HasColumnType("text");

                    b.Property<string>("Recipient")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Gifts");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CustomerID = 0,
                            GiftedProduct = "MacBook Air",
                            Giver = "Batool Alghamdi",
                            Recipient = "Sara Alnasser"
                        },
                        new
                        {
                            ID = 2,
                            CustomerID = 0,
                            GiftedProduct = "iPad Pro",
                            Giver = "Sara Alnasser",
                            Recipient = "Batool Alghamdi"
                        },
                        new
                        {
                            ID = 3,
                            CustomerID = 0,
                            GiftedProduct = "Apple TV",
                            Giver = "Abdullaziz Almohammadi",
                            Recipient = "Thamer Mashni"
                        },
                        new
                        {
                            ID = 4,
                            CustomerID = 0,
                            GiftedProduct = "Beats solo3 Wireless Headphones",
                            Giver = "Thamer Mashni",
                            Recipient = "Turki Alqurashi"
                        });
                });

            modelBuilder.Entity("Shopping.Models.ProductModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("brand")
                        .HasColumnType("text");

                    b.Property<string>("image")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            id = 1,
                            brand = "Apple",
                            image = "https://images-na.ssl-images-amazon.com/images/I/71MHTD3uL4L._AC_SX679_.jpg",
                            name = "iPhone 12 Pro",
                            price = 4199
                        },
                        new
                        {
                            id = 2,
                            brand = "Apple",
                            image = "https://images-na.ssl-images-amazon.com/images/I/7118Z2RPOdL._AC_SX679_.jpg",
                            name = "iPad Pro",
                            price = 4249
                        },
                        new
                        {
                            id = 3,
                            brand = "Apple",
                            image = "https://m.media-amazon.com/images/I/71TPda7cwUL._AC_SL1500_.jpg",
                            name = "MacBook Air",
                            price = 4999
                        },
                        new
                        {
                            id = 4,
                            brand = "Apple",
                            image = "https://static.bhphoto.com/images/multiple_images/images500x500/1474305464_IMG_687773.jpg",
                            name = "Beats solo3 Wireless Headphones",
                            price = 820
                        },
                        new
                        {
                            id = 5,
                            brand = "Apple",
                            image = "https://cdn.shoplightspeed.com/shops/611777/files/17704548/1500x4000x3/apple-apple-watch-series-5-gps-44mm-gold-aluminum.jpg",
                            name = "Apple Watch",
                            price = 1499
                        },
                        new
                        {
                            id = 6,
                            brand = "Apple",
                            image = "https://images-na.ssl-images-amazon.com/images/I/51Y-Dulc3bL._AC_SX569_.jpg",
                            name = "Apple TV",
                            price = 949
                        });
                });

            modelBuilder.Entity("Shopping.Models.ServiceModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("ServiceName")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Price = 200,
                            ServiceName = "Maintenance & Parts Replacement"
                        },
                        new
                        {
                            ID = 2,
                            Price = 150,
                            ServiceName = "Software & Backup"
                        },
                        new
                        {
                            ID = 3,
                            Price = 100,
                            ServiceName = "One Year Warranty Extension"
                        });
                });

            modelBuilder.Entity("Shopping.Models.CustomerProduct", b =>
                {
                    b.HasOne("Shopping.Models.CustomerModel", "Customer")
                        .WithMany("CustomerProducts")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shopping.Models.ProductModel", "Product")
                        .WithMany("CustomerProducts")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shopping.Models.GiftModel", b =>
                {
                    b.HasOne("Shopping.Models.CustomerModel", "Customer")
                        .WithMany("Gifts")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
